require('dotenv').config();
const { StringSession } = require('telegram/sessions');
const { TelegramClient } = require('telegram');
const input = require('input'); // npm install input
const fs = require('fs-extra');
const path = require('path');
const createCsvWriter = require('csv-writer').createObjectCsvWriter;

const apiId = Number(process.env.TELEGRAM_API_ID);
const apiHash = process.env.TELEGRAM_API_HASH;
const phoneNumber = process.env.TELEGRAM_PHONE;
const outputDir = process.env.OUTPUT_DIR || './output';

fs.ensureDirSync(outputDir);

const stringSession = new StringSession(process.env.TELEGRAM_SESSION || '');

async function main() {
  console.log('== Telegram Group Downloader (gramjs) ==');
  if (!apiId || !apiHash || !phoneNumber) {
    console.error('‚ùå –£–∫–∞–∂–∏—Ç–µ TELEGRAM_API_ID, TELEGRAM_API_HASH –∏ TELEGRAM_PHONE –≤ .env');
    process.exit(1);
  }

  const client = new TelegramClient(stringSession, apiId, apiHash, {
    connectionRetries: 5,
  });

  await client.start({
    phoneNumber: async () => phoneNumber,
    password: async () => await input.text('–í–≤–µ–¥–∏—Ç–µ 2FA –ø–∞—Ä–æ–ª—å (–µ—Å–ª–∏ –µ—Å—Ç—å): '),
    phoneCode: async () => await input.text('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: '),
    onError: (err) => console.log(err),
  });

  console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
  const sessionString = client.session.save();
  console.log('–°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π TELEGRAM_SESSION. –î–æ–±–∞–≤—å—Ç–µ –µ—ë –≤ .env –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –±–µ–∑ –∫–æ–¥–∞.');
  console.log('Session string:', sessionString);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –≤ .env –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  const envPath = path.resolve(process.cwd(), '.env');
  let envContent = '';
  if (fs.existsSync(envPath)) {
    envContent = fs.readFileSync(envPath, 'utf8');
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å
    envContent = envContent.replace(/^TELEGRAM_SESSION=.*$/m, '');
    envContent = envContent.trim() + '\n';
  }
  envContent += `TELEGRAM_SESSION=${sessionString}\n`;
  fs.writeFileSync(envPath, envContent, 'utf8');
  console.log('‚úÖ –°—Ç—Ä–æ–∫–∞ —Å–µ—Å—Å–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ .env (TELEGRAM_SESSION)');

  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
  const dialogs = await client.getDialogs({ limit: 100 });
  console.log('–í–∞—à–∏ —á–∞—Ç—ã:');
  dialogs.forEach((d, i) => {
    const title = d.title || d.name || d.username || d.id;
    console.log(`${i + 1}. ${title} (id: ${d.id})`);
  });

  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è id —á–∞—Ç–∞
  const chatId = await input.text('–í–≤–µ–¥–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã/—á–∞—Ç–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: ');

  // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —á–∞—Ç–∞
  const chat = await client.getEntity(chatId);
  const chatTitle = (chat.title || chat.username || chat.id.toString()).replace(/[^a-zA-Z0-9_–∞-—è–ê-–Ø-]/g, '_');
  const csvFileName = `messages_${chatId}_${chatTitle}.csv`;
  const csvPath = path.join(outputDir, csvFileName);

  // –°–∫–∞—á–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
  const messages = [];
  console.log('‚è¨ –°–∫–∞—á–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...');
  let total = 0;
  for await (const message of client.iterMessages(chatId, { limit: 10000 })) {
    if (message.message) {
      messages.push({
        id: message.id,
        date: (message.date instanceof Date ? message.date : new Date(message.date)).toISOString(),
        user_id: message.senderId?.value || '',
        text: message.message,
      });
      total++;
      if (total % 100 === 0) console.log(`... —Å–∫–∞—á–∞–Ω–æ ${total}`);
    }
  }
  console.log(`‚úÖ –í—Å–µ–≥–æ —Å–∫–∞—á–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messages.length}`);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
  const csvWriter = createCsvWriter({
    path: csvPath,
    header: [
      { id: 'id', title: 'ID' },
      { id: 'date', title: '–î–∞—Ç–∞' },
      { id: 'user_id', title: 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' },
      { id: 'text', title: '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è' },
    ]
  });
  await csvWriter.writeRecords(messages);
  console.log(`üíæ –°–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${csvPath}`);
  console.log(`\n–ß—Ç–æ–±—ã –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —á–∞—Ç, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:`);
  console.log(`node summarize_gramjs_csv.js`);

  process.exit(0);
}

main();